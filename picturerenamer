#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright (c) 2011 Martin Ueding <dev@martin-ueding.de>

import glob
import os
import re
import shutil
import sys

def parse_folder_name(name):
    pattern = re.compile(r"([12]\d[01]\d[0123]\d)-([^/]+)/?")
    m = pattern.match(name)
    if m is not None:
        return m.group(1), m.group(2)

    return None

def parse_file_name(name):
    pattern = re.compile(r"([12]\d[01]\d[0123]\d)-([^-]+)-(\d+).*\..*")
    m = pattern.match(name)
    if m is not None:
        return m.group(1), m.group(2), m.group(3)

    return None

def find_number(name):
    pattern = re.compile(r"\D*(\d+)\D*[^.]*\.(.*)")
    m = pattern.match(name)
    if m is not None:
        return m.group(1), m.group(2)

    return None

def new_name(folder, date, name, number, suffix):
    n = "%s/%s-%s-%s.%s" % (folder, date, name, number, suffix)
    n = n.replace(r"//", r"/")
    return n

def ask_rename(old, new):
    answer = raw_input("rename? [y/N] ")
    if answer == "y":
        shutil.move(old, new)


def main():
    show_good = False
    show_folders = False

    files = sys.argv[1:]

    for f in files:
        folder_info = parse_folder_name(f)
        if folder_info is None:
            continue


        if show_folders:
            print f, folder_info

        for pic in sorted(glob.iglob(f+"/*")):
            if not os.path.isfile(pic):
                continue

            nameparts = parse_file_name(os.path.basename(pic))
            if nameparts is None:
                num = find_number(os.path.basename(pic))
                if num is not None:
                    number, suffix = num
                else:
                    print "Problem:", pic
                    continue

                while True:
                    newname = new_name(f, folder_info[0], folder_info[1], number, suffix)
                    if not os.path.exists(newname):
                        break
                    number = str(int(number)+1)

                print pic.ljust(50, '.'), newname.ljust(50),

                ask_rename(pic, newname)

            else:
                if show_good:
                    print pic, nameparts


if __name__ == "__main__":
	main()
